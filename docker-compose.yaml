version: "3.7"
services:
  zookeeper:
    image: "bitnami/zookeeper:3.7.0"
    restart: always
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
  kafka:
    image: "bitnami/kafka:2.8.1"
    restart: always
    depends_on:
      - zookeeper
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    ports:
      - 9092:9092
  login:
    build:
      context: ./login/
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - zookeeper
      - kafka
    environment:
      PORT: 3000
      kafkaHost: kafka:9092
    ports:
      - 13000:3000
  blocked:
    build:
      context: ./blocked/
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - zookeeper
      - kafka
    environment:
      PORT: 3000
      kafkaHost: kafka:9092
    ports:
      - 15000:3000
  vendedor:
    build:
      context: ./producer_venta/
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - zookeeper
      - kafka
    environment:
      PORT: 3000
      kafkaHost: kafka:9092
    ports:
      - 1000:3000
  calculoventas:
    build:
      context: ./consumer_calculoventas/
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - zookeeper
      - kafka
    environment:
      PORT: 3000
      kafkaHost: kafka:9092
    ports:
      - 2000:3000
  calculostock:
    build:
      context: ./consumer_stock/
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - zookeeper
      - kafka
    environment:
      PORT: 3000
      kafkaHost: kafka:9092
    ports:
      - 3000:3000
  calculoubicaciones:
    build:
      context: ./consumer_ubicaciones/
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - zookeeper
      - kafka
    environment:
      PORT: 3000
      kafkaHost: kafka:9092
    ports:
      - 4000:3000
  consumermiembro:
    build:
      context: ./consumer_nuevoMiembro/
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - zookeeper
      - kafka
    environment:
      PORT: 3000
      kafkaHost: kafka:9092
    ports:
      - 5000:3000
